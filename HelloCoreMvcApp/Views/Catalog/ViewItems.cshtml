@model HelloCoreMvcApp.ViewModels.ViewItemsViewModel
@{
    List<Company> companies = (List<Company>)ViewData["Companies"];
    var filter = Model.FilterViewModel;

}
<div class="border-bottom category-name"><a href="">// CATALOG // @(ViewData["Title"] + "s")</a></div>

<h5 class="mb-md-4 font-weight-bold">@(ViewData["Title"] + "s") - @Model.Items.Count products</h5>


<div class="container">
    <div class="row">
        <div class="col-3 bg-light p-4">

            <form method="post">
                <input id="page" type="hidden" name="page" value="@(Model.PageViewModel.PageNumber)" />

                <label>Price:</label>
                <div class="form-row">

                    <div class="col">
                        <input type="number" class="form-control" name="minPrice" placeholder="$ min" value="@{ if (filter.SelectedMinPrice != 0) { @(filter.SelectedMinPrice) }  }">
                    </div>
                    <div class="col">
                        <input type="number" class="form-control" name="maxPrice" placeholder="$ max" value="@{ if (filter.SelectedMaxPrice != 999999) { @(filter.SelectedMaxPrice) }  }">
                    </div>
                </div>
                <br />

                <label>Companies:</label>

                <div class="form-check">

                    @foreach (var comp in companies)
                    {
                        <input class="form-check-input" type="checkbox" value="@comp.Id" name="companiesId" id="@(comp + "Check")"
                               @{ if (filter.SelectedCompanies != null) { foreach (var scomp in filter.SelectedCompanies) { if (scomp == comp.Id) @("checked")  ; } } }>
                        <label class="form-check-label" for="@(comp.Name + "Check")">
                            @comp.Name
                        </label>
                        <br />
                    }
                </div>
                <br />

                <button type="submit" class="btn btn-primary btn-block">Submit</button>
                <button type="submit" class="btn btn-secondary btn-block" name="cancel" value="cancel">Clear Filter</button>
            </form>

        </div>
        <div class="col-9">

            <table class="table">
                @foreach (var p in Model.Items)
                {
                    <tr><td>@p.Company.Name</td><td>@p.Name</td><td>@p.Price</td></tr>
                }
            </table>

            <div class="form-inline">
                <form method="post">
                    @if (Model.PageViewModel.HasPreviousPage)
                    {
                        <input id="page" type="hidden" name="page" value="@(Model.PageViewModel.PageNumber - 1)" />
                        @Html.Hidden("name", Model.FilterViewModel.SelectedName)

                        if (filter.SelectedCompanies != null)
                        {
                            @for (int i = 0; i < filter.SelectedCompanies.Length; i++)
                            {
                                <input type="hidden" name="companiesId" value="@filter.SelectedCompanies[i]" />
                            }
                        }

                        @Html.Hidden("minPrice", filter.SelectedMinPrice)
                        @Html.Hidden("maxPrice", filter.SelectedMaxPrice)
                        @Html.Hidden("sortorder", Model.SortViewModel.Current)

                        <button type="submit" class="btn btn-outline-dark">BACK</button>
                    }

                </form>
                <form method="post">
                    @if (Model.PageViewModel.HasNextPage)
                    {
                        <input id="page" type="hidden" name="page" value="@(Model.PageViewModel.PageNumber + 1)" />

                        if (filter.SelectedCompanies != null)
                        {
                            @for (int i = 0; i < filter.SelectedCompanies.Length; i++)
                            {
                                <input type="hidden" name="companiesId" value="@filter.SelectedCompanies[i]" />
                            }
                        }
                        @Html.Hidden("minPrice", filter.SelectedMinPrice)
                        @Html.Hidden("maxPrice", filter.SelectedMaxPrice)
                        @Html.Hidden("sortorder", Model.SortViewModel.Current)

                        <button type="submit" class="btn btn-outline-dark">NEXT</button>
                    }
                </form>
            </div>

        </div>
    </div>
</div>
